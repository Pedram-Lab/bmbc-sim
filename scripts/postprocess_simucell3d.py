# %%
import pyvista as pv
from ngsolve.webgui import Draw

from ecsim.geometry import TissueGeometry

# %%
# Load the mesh (which is a vtk file generated by SimuCell3D)
geometry = TissueGeometry.from_file("result_3590.vtk")

# %%
# Scale it so that the bounding box is roughly [-5, 5]^3
geometry = geometry.scale(40000)
min_coords, max_coords = geometry.bounding_box()
print(f"Bounding box: {min_coords}, {max_coords}")

# %%
# Post-process the mesh to create ECS and make the surfaces look nicer
ECS_PERCENTAGE = 0.3
geometry = geometry.shrink_cells(1 - ECS_PERCENTAGE, jitter=0.1)
geometry = geometry.smooth(100)
geometry = geometry.decimate(0.7)

# %%
# Extract cells from a small center portion
min_clip, max_clip = min_coords / 5, max_coords / 5
geometry = geometry.keep_cells_within(
    min_coords=min_clip,
    max_coords=max_clip,
    inside_threshold=0.1
)

# %%
# Manually remove some cells that didn't successfully mesh
# TODO: properly clean the cells
working_cells = [c for i, c in enumerate(geometry.cells) if not i in [1, 4, 31]]
geometry = TissueGeometry(working_cells)

# %%
# Visualize the mesh together with the bounding box
combined_mesh = geometry.as_single_mesh()
plotter = pv.Plotter()
box = pv.Box((min_clip[0], max_clip[0],
                min_clip[1], max_clip[1],
                min_clip[2], max_clip[2]))
plotter.add_mesh(combined_mesh, scalars='face_cell_id', show_edges=True, cmap='tab20b')
plotter.add_mesh(box, color='gray', opacity=0.5)
plotter.show()

# %% Create an ngsolve mesh and visualize it
mesh = geometry.to_ngs_mesh(
    mesh_size=1.0,
    min_coords=min_clip,
    max_coords=max_clip,
    projection_tol=0.01,
)
print(f"Created mesh with {mesh.nv} vertices and {mesh.ne} elements")
Draw(mesh)

# %%
